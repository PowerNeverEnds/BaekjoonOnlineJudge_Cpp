/*
8
00000000
00000000
00001111
00001111
00011111
00111111
00111111
00111111
*/

#include <iostream>
#include <string>
#include <deque>
using namespace std;

int n;
char arr[200][200];
deque<char> d;
int px[] = {0,1,0,1};
int py[] = {0,0,1,1};

int qt(int k, int p,int y, int x)
{
	//cout << k << " " << p << " " << y << " " << x << "\n";
	if (p == 0)
	{
		d.push_back('(');
	}
	if (k == 1)
//		d.push_back(arr[y + py[p]][x + px[p]]);
		d.push_back(arr[y][x]);
	if (k != 1)
	{
		qt(k / 2, 0, y, x);
		qt(k / 2, 1, y, x + k / 2);
		qt(k / 2, 2, y + k / 2, x);
		qt(k / 2, 3, y + k / 2, x + k / 2);
	}
	if (p == 3)
	{
		char t[4];
		for (int i = 0; i < 4; i++)
		{
			t[i] = d.back();
			d.pop_back();
		}
		bool same = true;
		for (int i = 0; i < 3; i++)
		{
			if (t[i] != t[i + 1])
			{
				//cout <<"["<< t[i] << "] [" << t[i + 1]<<"]\n";
				same = false;
			}
		}
		if (same == true && (t[0]=='1' || t[0]=='0'))	// 괄호 없어지는거 때문에 조건추가
		{
			d.pop_back();
			d.push_back(t[0]);
		}
		else
		{
			//d.push_back('(');
			for (int i = 3; i >= 0; i--)
			{
				d.push_back(t[i]);
			}
			d.push_back(')');
		}
		return 0;
	}
	return 0;
}

int main()
{
	cin >> n;
	if (n == 1)
	{
		int t;
		cin >> t;
		cout << t << "\n";
		return 0;
	}
	else
	{
		for (int i = 0; i < n; i++)
		{
			cin.clear();
			string str;
			cin >> str;
			for (int j = 0; j < n; j++)
			{
				arr[i][j] = str[j];
			}
		}
		//qt(n, 0, 0, 0);
		qt(n / 2, 0, 0, 0);
		qt(n / 2, 1, 0, n / 2);
		qt(n / 2, 2, n / 2, 0);
		qt(n / 2, 3, n / 2, n / 2);


		while (!d.empty())
		{
			cout << d.front();
			d.pop_front();
		}//cout << "\n";
	}
	return 0;
}


/*
64
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0011000000000000000000000000000000000000000000000000000000000000
0011000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000001

*/